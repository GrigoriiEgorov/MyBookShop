package com.example.MyBookShopApp.data.struct.book;


import com.example.MyBookShopApp.data.struct.author.Author;
import com.example.MyBookShopApp.data.struct.book.file.BookFileEntity;
import com.example.MyBookShopApp.data.struct.book.file.FileDownloadEntity;
import com.example.MyBookShopApp.data.struct.book.links.Book2AuthorEntity;
import com.example.MyBookShopApp.data.struct.book.links.Book2GenreEntity;
import com.example.MyBookShopApp.data.struct.book.links.Book2UserEntity;
import com.example.MyBookShopApp.data.struct.book.review.BookReviewEntity;
import com.example.MyBookShopApp.data.struct.payments.BalanceTransactionEntity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.hibernate.annotations.Type;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.logging.Logger;

@Entity
@Table(name = "books")
@ApiModel(description = "entity representing a book")
public class Book {

    @Id
    @Column(name = "book_id")
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @ApiModelProperty("id generated by db automaticaly")
    private Integer id;
    @Column(name = "pub_date")
    @ApiModelProperty("date of book publication")
    private Date pubDate;
    @Column(name = "is_bestseller",columnDefinition = "SMALLINT")
    @ApiModelProperty("if isBestseller = 1 so the book is considered to be bestseller and if 0 the book is not a bestseller")
    private Short isBestseller;
    @ApiModelProperty("mnemonical identity sequence of characters")
    private String slug;
    @ApiModelProperty("book title")
    private String title;
    @ApiModelProperty("image url")
    private String image;
    @Lob
    @Type(type = "org.hibernate.type.TextType")
    @ApiModelProperty("book description")
    private String description;
    @ApiModelProperty("price of the book")
    private Integer price;
    @Column(name = "discount")
    @ApiModelProperty("discount")
    private Short discount  ;

    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    @JsonIgnore
    private List<Book2AuthorEntity> book2AuthorEntity;
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    @JsonIgnore
    private List<Book2GenreEntity> book2GenreEntities = new ArrayList<>();
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    @JsonIgnore
    private List<Book2UserEntity> book2UserEntities = new ArrayList<>();
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    @JsonIgnore
    private List<FileDownloadEntity> fileDownloadEntities = new ArrayList<>();
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    @JsonIgnore
    private List<BalanceTransactionEntity> balanceTransactionEntities = new ArrayList<>();
    @OneToMany(mappedBy = "book", cascade = CascadeType.ALL)
    @JsonIgnore
    private List<BookReviewEntity> bookReviewEntities = new ArrayList<>();

    @OneToMany(mappedBy = "book")
    private List<BookFileEntity> bookFileEntityList = new ArrayList<>();

    public List<BookFileEntity> getBookFileEntityList() {
        return bookFileEntityList;
    }

    public void setBookFileEntityList(List<BookFileEntity> bookFileEntityList) {
        this.bookFileEntityList = bookFileEntityList;
    }

    @JsonProperty
    public Integer discountedPrice(){
        return price - Math.toIntExact((long) (price * ((double)discount/100)));
    }

    @JsonProperty()
    public List<String> authorList(){
        List<String> authorsList = new ArrayList<>();
        for (Book2AuthorEntity b2a : book2AuthorEntity){
            authorsList.add(b2a.getAuthor().getFirstName().concat(" ").concat(b2a.getAuthor().getLastName()));
        }
        return authorsList;
    }

//    @JsonProperty()
//    public List<Author> authorList(){
//        List<String> authorsList = new ArrayList<>();
//        for (Book2AuthorEntity b2a : book2AuthorEntity){
//            authorsList.add(b2a.getAuthor().getFirstName().concat(" ").concat(b2a.getAuthor().getLastName()));
//        }
//        return authorsList;
//    }
    public Integer getPrice() {
        return price;
    }

    public void setPrice(Integer price) {
        this.price = price;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Short getDiscount() {
        return discount;
    }

    public void setDiscount(Short discount) {
        this.discount = discount;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public Short getIsBestseller() {
        return isBestseller;
    }

    public void setIsBestseller(Short isBestseller) {
        this.isBestseller = isBestseller;
    }

    public Date getPubDate() {
        return pubDate;
    }

    public void setPubDate(Date datePub) {
        this.pubDate = datePub;
    }

    public String getSlug() {
        return slug;
    }

    public void setSlug(String slug) {
        this.slug = slug;
    }

    public List<FileDownloadEntity> getFileDownloadEntities() {
        return fileDownloadEntities;
    }

    public void setFileDownloadEntities(List<FileDownloadEntity> fileDownloadEntities) {
        this.fileDownloadEntities = fileDownloadEntities;
    }

    public List<BalanceTransactionEntity> getBalanceTransactionEntities() {
        return balanceTransactionEntities;
    }

    public void setBalanceTransactionEntities(List<BalanceTransactionEntity> balanceTransactionEntities) {
        this.balanceTransactionEntities = balanceTransactionEntities;
    }

    public List<BookReviewEntity> getBookReviewEntities() {
        return bookReviewEntities;
    }

    public void setBookReviewEntities(List<BookReviewEntity> bookReviewEntities) {
        this.bookReviewEntities = bookReviewEntities;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public List<Book2GenreEntity> getBook2GenreEntities() {
        return book2GenreEntities;
    }

    public void setBook2GenreEntities(List<Book2GenreEntity> book2GenreEntities) {
        this.book2GenreEntities = book2GenreEntities;
    }

    public List<Book2UserEntity> getBook2UserEntities() {
        return book2UserEntities;
    }

    public void setBook2UserEntities(List<Book2UserEntity> book2UserEntities) {
        this.book2UserEntities = book2UserEntities;
    }

    public List<Book2AuthorEntity> getBook2AuthorEntity() {
        return book2AuthorEntity;
    }

    public void setBook2AuthorEntity(List<Book2AuthorEntity> authors) {
        this.book2AuthorEntity = authors;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }


}
